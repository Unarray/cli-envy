---
  name: Release Envy CLI

  on:
    push:
      tags:
        - "*"

  jobs:
    release:
      runs-on: ubuntu-latest
      outputs:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
      steps:
        - uses: actions/checkout@v3
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.ref }}
            release_name: ${{ github.ref }}
            draft: true
            prerelease: false
    build:
      needs: release
      runs-on: ubuntu-latest
      strategy:
        matrix:
          platform: 
            - linux-x64
            - linux-arm64
            - windows-x64
            - darwin-x64
            - darwin-arm64
      steps:
        - uses: actions/checkout@v3
        - name: Use Bun
          uses: oven-sh/setup-bun@v2
          with:
            bun-version: latest
        - name: Install dependencies
          run: bun install
        - name: Build CLI
          id: build_cli
          shell: bash
          run: |
            # Determine the output filename and asset name based on the platform
            if [[ "${{ matrix.platform }}" == windows-* ]]; then
              outfile="./dist/${{ matrix.platform }}.exe"
              asset_name="envy-cli-${{ matrix.platform }}.exe"
            else
              outfile="./dist/${{ matrix.platform }}"
              asset_name="envy-cli-${{ matrix.platform }}"
            fi
            echo "Building for platform: ${{ matrix.platform }}"
            echo "Output file: $outfile"
            # Build the CLI
            bun build --compile --minify --sourcemap ./src/bin.ts --target bun-${{ matrix.platform }} --outfile $outfile
            # Set the outfile and asset_name as output variables
            echo "outfile=$outfile" >> $GITHUB_OUTPUT
            echo "asset_name=$asset_name" >> $GITHUB_OUTPUT
        - name: Upload build artifact to release
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ needs.release.outputs.upload_url }}
            asset_path: ${{ steps.build_cli.outputs.outfile }}
            asset_name: ${{ steps.build_cli.outputs.asset_name }}
            asset_content_type: application/octet-stream
...